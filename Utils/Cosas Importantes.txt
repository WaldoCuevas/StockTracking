Implementacion de Spring Security

Asignar Rol -> Admin -> En caso de no asignar Rol por defecto se creara un rol USER.

al realizar una request es necesario enviar el token del usuario:

Bearer + Token (example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJXYWxkbyIsImlhdCI6MTY2NjYyNjgwMSwiZXhwIjoxNjY2NjYyODAxfQ.9-vS_VmTlWrC0jHQFoOzR_b2OVwJS2yOD1U8cHWwCqTLaF8D0UKf3-In-OnMIOlon6jSbVDg6NXt5dK0cKhKEA)

usuarios
 -> Admin: Puede realizar todas las request
	-> request:
		* GetProductById
		* GetAllProduct
		* DeleteProduct
		* UpdateProduct
		* CreateProduct
 
 -> User: Posee limitaciones en las request
	-> Request:
		* GetProductById
		* GetAllProduct

dependencias instaladas
jpa -> persistencia
starter web -> permite a spring trabajar en web
spring boot devtools -> herramientas -> no es indispensable
mysql -> te genera lo necesario para trabajar mysql -> aplication properties
tomcat -> genera el servidor de tomcat para que spring se ejecuta
lombok -> genera anotaciones que ayudan a desarrollar
starter-test -> para generar test -> no es indispensable
jsonWebToken -> permite trabajar con JWT
spring-security -> agrega security a spring -> user y password
commons-lang -> anotaciones especificas para trabajar
oauth2-resource-server -> ni idea, revisar
hibernate-validator -> metodos para validar, revisar si realmente es util
